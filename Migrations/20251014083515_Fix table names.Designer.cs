// <auto-generated />
using System;
using Library_Management_Case_Study.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library_Management_Case_Study.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    [Migration("20251014083515_Fix table names")]
    partial class Fixtablenames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("BooksAuthors", (string)null);
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Bio 1",
                            Name = "Nour El den"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Bio 2",
                            Name = "Seif Mohamed"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Bio 3",
                            Name = "Seif Ahmed"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Bio 4",
                            Name = "Hamsa Ehab"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Bio 5",
                            Name = "Hana Elsayed"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "Bio 6",
                            Name = "Ahmed ElSewedy"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "Bio 7",
                            Name = "Salah El den"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "Bio 8",
                            Name = "Anas"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "Bio 9",
                            Name = "Ahmed Sherif"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "Bio 10",
                            Name = "Hussien Mohamed"
                        });
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Copies")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Copies = 10,
                            Description = "Description Des",
                            PublishDate = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Science 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Copies = 15,
                            Description = "Description Des",
                            PublishDate = new DateTime(2026, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "History 1"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Copies = 5,
                            Description = "Description Des",
                            PublishDate = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Self-Improvement"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Copies = 2,
                            Description = "Description Des",
                            PublishDate = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Math"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Copies = 13,
                            Description = "Description Des",
                            PublishDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fiction"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Copies = 30,
                            Description = "Description Des",
                            PublishDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Science 2"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Copies = 50,
                            Description = "Description Des",
                            PublishDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "History 2"
                        });
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Borrowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Borrowings");
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 2,
                            Name = "History"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Self-Improvement"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Math"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fiction"
                        });
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.MembershipCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardNo")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("MembershipCards");
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("Library_Management_Case_Study.Data.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_Management_Case_Study.Data.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Book", b =>
                {
                    b.HasOne("Library_Management_Case_Study.Data.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Borrowing", b =>
                {
                    b.HasOne("Library_Management_Case_Study.Data.Models.Book", "Book")
                        .WithMany("Borrowing")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_Management_Case_Study.Data.Models.User", "User")
                        .WithMany("Borrowings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.MembershipCard", b =>
                {
                    b.HasOne("Library_Management_Case_Study.Data.Models.User", "User")
                        .WithOne("MembershipCard")
                        .HasForeignKey("Library_Management_Case_Study.Data.Models.MembershipCard", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Book", b =>
                {
                    b.Navigation("Borrowing");
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library_Management_Case_Study.Data.Models.User", b =>
                {
                    b.Navigation("Borrowings");

                    b.Navigation("MembershipCard");
                });
#pragma warning restore 612, 618
        }
    }
}
